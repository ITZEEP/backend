<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.domain.home.mapper.HomeMapper">

    <select id="findUserNameById" parameterType="long" resultType="string">
        SELECT name
        FROM identity_verification
        WHERE user_id = #{userId}
    </select>

    <insert id="insertHome" parameterType="map" useGeneratedKeys="true" keyProperty="home.homeId">
        INSERT INTO home (
            user_id, user_name,
            addr1, addr2, residence_type, lease_type, deposit_price,
            monthly_rent, maintenance_fee, supply_area, exclusive_area, home_status,
            view_cnt, like_cnt, chat_cnt, report_cnt,
            room_cnt, created_at, updated_at
        ) VALUES (
                     #{userId}, #{userName},
                     #{home.addr1}, #{home.addr2}, #{home.residenceType}, #{home.leaseType}, #{home.depositPrice},
                     #{home.monthlyRent}, #{home.maintenanceFee}, #{home.supplyArea}, #{home.exclusiveArea}, #{home.homeStatus},
                     0, 0, 0, 0,
                     #{home.roomCnt}, NOW(), NOW()
                 )
    </insert>

    <insert id="insertHomeDetail" parameterType="org.scoula.domain.home.vo.HomeRegisterVO" useGeneratedKeys="true" keyProperty="homeDetailId">
        INSERT INTO home_detail (
            home_id,
            home_detail_id,
            build_date,
            home_floor,
            building_total_floors,
            home_direction,
            bathroom_count,
            is_pet,
            is_parking_available
        ) VALUES (
                     #{homeId},
                     #{homeDetailId},
                     #{buildDate},
                     #{homeFloor},
                     #{buildingTotalFloors},
                     #{homeDirection},
                     #{bathroomCount},
                     #{isPet},
                     #{isParkingAvailable}
                 )
    </insert>

    <insert id="insertHomeFacilities" parameterType="map">
        INSERT INTO home_facility (home_detail_id, item_id)
        VALUES
        <foreach collection="facilityItemIds" item="itemId" separator=",">
            (#{homeDetailId}, #{itemId})
        </foreach>
    </insert>

    <insert id="insertHomeImages" parameterType="map">
        INSERT INTO home_image (home_id, image_url)
        VALUES
        <foreach collection="imageUrls" item="imageUrl" separator=",">
            (#{homeId}, #{imageUrl})
        </foreach>
    </insert>

    <insert id="insertHomeLike" parameterType="map">
        INSERT INTO home_like (user_id, home_id, liked_at)
        VALUES (#{userId}, #{homeId}, NOW())
    </insert>

    <insert id="insertHomeMaintenanceFees" parameterType="map">
        INSERT INTO home_maintenance_fee (home_id, maintenance_id, fee)
        VALUES
        <foreach collection="fees.entrySet()" item="feeItem" separator=",">
            (#{homeId}, #{feeItem.key}, #{feeItem.value})
        </foreach>
    </insert>

    <insert id="insertHomeReport" parameterType="org.scoula.domain.home.vo.HomeReportVO">
        INSERT INTO home_report (
            report_id, user_id, home_id, report_reason, report_at, report_status
        ) VALUES (
                     #{reportId},
                     #{userId},
                     #{homeId},
                     #{reportReason},
                     #{reportAt},
                     #{reportStatus}
                 )
    </insert>

    <select id="findHomes" parameterType="map" resultType="org.scoula.domain.home.vo.HomeRegisterVO">
        SELECT
            h.home_id AS homeId,
            h.user_id AS userId,
            h.user_name AS userName,
            h.addr1,
            h.addr2,
            h.residence_type AS residenceType,
            h.lease_type AS leaseType,
            h.deposit_price AS depositPrice,
            h.monthly_rent AS monthlyRent,
            h.maintenance_fee AS maintenanceFee,
            h.supply_area AS supplyArea,
            h.exclusive_area AS exclusiveArea,
            h.room_cnt AS roomCnt,
            h.home_status AS homeStatus,
            h.view_cnt AS viewCnt,
            h.like_cnt AS likeCnt,
            h.chat_cnt AS chatCnt,
            h.report_cnt AS reportCnt,
            h.created_at AS createdAt,
            h.updated_at AS updatedAt,
            d.home_detail_id AS homeDetailId,
            d.build_date AS buildDate,
            d.home_floor AS homeFloor,
            d.building_total_floors AS buildingTotalFloors,
            d.home_direction AS homeDirection,
            d.bathroom_count AS bathroomCount,
            d.is_pet AS isPet,
            d.is_parking_available AS isParkingAvailable,
            hi.image_id AS imageId,
            hi.image_url AS imageUrl
        FROM home h
                 LEFT JOIN home_detail d ON h.home_id = d.home_id
                 LEFT JOIN (
            SELECT home_id, MIN(image_id) AS image_id, MIN(image_url) AS image_url
            FROM home_image
            GROUP BY home_id
        ) hi ON h.home_id = hi.home_id
        ORDER BY h.created_at DESC
            LIMIT #{offset}, #{size}
    </select>

    <select id="countHomes" resultType="long">
        SELECT COUNT(*) FROM home
    </select>

    <resultMap id="HomeDetailResultMap" type="org.scoula.domain.home.vo.HomeRegisterVO">
        <id property="homeId" column="home_id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="addr1" column="addr1"/>
        <result property="addr2" column="addr2"/>
        <result property="residenceType" column="residence_type"/>
        <result property="leaseType" column="lease_type"/>
        <result property="depositPrice" column="deposit_price"/>
        <result property="monthlyRent" column="monthly_rent"/>
        <result property="maintenanceFee" column="maintenance_fee"/>
        <result property="supplyArea" column="supply_area"/>
        <result property="exclusiveArea" column="exclusive_area"/>
        <result property="homeStatus" column="home_status"/>
        <result property="viewCnt" column="view_cnt"/>
        <result property="likeCnt" column="like_cnt"/>
        <result property="chatCnt" column="chat_cnt"/>
        <result property="reportCnt" column="report_cnt"/>
        <result property="roomCnt" column="room_cnt"/>
        <result property="homeFloor" column="home_floor"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="homeDetailId" column="home_detail_id"/>
        <result property="buildDate" column="build_date"/>
        <result property="buildingTotalFloors" column="building_total_floors"/>
        <result property="homeDirection" column="home_direction"/>
        <result property="bathroomCount" column="bathroom_count"/>
        <result property="isPet" column="is_pet"/>
        <result property="isParkingAvailable" column="is_parking_available"/>
        <result property="moveInDate" column="move_in_date"/>

        <collection property="imageUrls" ofType="string">
            <result column="image_url"/>
        </collection>

        <collection property="maintenanceItems" ofType="org.scoula.domain.home.vo.HomeRegisterVO$MaintenanceFeeItem">
            <result property="maintenanceId" column="maintenance_id"/>
            <result property="fee" column="fee"/>
        </collection>
    </resultMap>

    <select id="findHomeById" parameterType="long" resultMap="HomeDetailResultMap">
        SELECT
            h.*,
            d.*,
            hi.image_url,
            hf.maintenance_id,
            mi.item_name,
            hf.fee
        FROM home h
                 LEFT JOIN home_detail d ON h.home_id = d.home_id
                 LEFT JOIN home_image hi ON h.home_id = hi.home_id
                 LEFT JOIN home_maintenance_fee hf ON h.home_id = hf.home_id
                 LEFT JOIN maintenance_item mi ON hf.maintenance_id = mi.maintenance_id
        WHERE h.home_id = #{homeId}
        ORDER BY hi.image_id, hf.maintenance_id
    </select>

    <select id="findHomeImagesByHomeId" parameterType="long" resultType="string">
        SELECT image_url
        FROM home_image
        WHERE home_id = #{homeId}
        ORDER BY image_id
    </select>

    <select id="findHomeMaintenanceItemsByHomeId" parameterType="long" resultType="org.scoula.domain.home.dto.response.MaintenanceFeeItemResponseDto">
        SELECT
            mi.item_name AS itemName,
            hf.fee
        FROM home_maintenance_fee hf
                 JOIN maintenance_item mi ON hf.maintenance_id = mi.maintenance_id
        WHERE hf.home_id = #{homeId}
    </select>

    <update id="updateHome" parameterType="org.scoula.domain.home.vo.HomeRegisterVO">
        UPDATE home
        SET
            addr1 = #{addr1},
            addr2 = #{addr2},
            residence_type = #{residenceType},
            lease_type = #{leaseType},
            deposit_price = #{depositPrice},
            monthly_rent = #{monthlyRent},
            maintenance_fee = #{maintenanceFee},
            supply_area = #{supplyArea},
            exclusive_area = #{exclusiveArea},
            room_cnt = #{roomCnt},
            updated_at = NOW()
        WHERE home_id = #{homeId}
    </update>

    <delete id="deleteHome">
        DELETE FROM home
        WHERE home_id = #{homeId}
    </delete>

    <select id="findLikedHomes" parameterType="long" resultType="org.scoula.domain.home.vo.HomeRegisterVO">
        SELECT
            h.home_id AS homeId,
            h.user_id AS userId,
            h.user_name AS userName,
            h.addr1,
            h.addr2,
            h.residence_type AS residenceType,
            h.lease_type AS leaseType,
            h.deposit_price AS depositPrice,
            h.monthly_rent AS monthlyRent,
            h.maintenance_fee AS maintenanceFee,
            h.supply_area AS supplyArea,
            h.exclusive_area AS exclusiveArea,
            h.room_cnt AS roomCnt,
            h.home_status AS homeStatus,
            h.view_cnt AS viewCnt,
            h.like_cnt AS likeCnt,
            h.chat_cnt AS chatCnt,
            h.report_cnt AS reportCnt,
            h.created_at AS createdAt,
            h.updated_at AS updatedAt,
            d.home_detail_id AS homeDetailId,
            d.build_date AS buildDate,
            d.home_floor AS homeFloor,
            d.building_total_floors AS buildingTotalFloors,
            d.home_direction AS homeDirection,
            d.bathroom_count AS bathroomCount,
            d.is_pet AS isPet,
            d.is_parking_available AS isParkingAvailable,
            hi.image_id AS imageId,
            hi.image_url AS imageUrl
        FROM home_like hl
                 JOIN home h ON hl.home_id = h.home_id
                 LEFT JOIN home_detail d ON h.home_id = d.home_id
                 LEFT JOIN (
            SELECT home_id, MIN(image_id) AS image_id, MIN(image_url) AS image_url
            FROM home_image
            GROUP BY home_id
        ) hi ON h.home_id = hi.home_id
        WHERE hl.user_id = #{userId}
        ORDER BY hl.liked_at DESC
    </select>

    <update id="incrementViewCount">
        UPDATE home
        SET view_cnt = view_cnt + 1
        WHERE home_id = #{homeId}
    </update>

    <delete id="deleteLike" parameterType="map">
        DELETE FROM home_like
        WHERE user_id = #{userId} AND home_id = #{homeId}
    </delete>

    <select id="findMyHomes" parameterType="map" resultType="org.scoula.domain.home.vo.HomeRegisterVO">
        SELECT
            h.home_id AS homeId,
            h.user_id AS userId,
            h.user_name AS userName,
            h.addr1,
            h.addr2,
            h.residence_type AS residenceType,
            h.lease_type AS leaseType,
            h.deposit_price AS depositPrice,
            h.monthly_rent AS monthlyRent,
            h.maintenance_fee AS maintenanceFee,
            h.supply_area AS supplyArea,
            h.exclusive_area AS exclusiveArea,
            h.room_cnt AS roomCnt,
            h.home_status AS homeStatus,
            h.view_cnt AS viewCnt,
            h.like_cnt AS likeCnt,
            h.chat_cnt AS chatCnt,
            h.report_cnt AS reportCnt,
            h.created_at AS createdAt,
            h.updated_at AS updatedAt,
            d.home_detail_id AS homeDetailId,
            d.build_date AS buildDate,
            d.home_floor AS homeFloor,
            d.building_total_floors AS buildingTotalFloors,
            d.home_direction AS homeDirection,
            d.bathroom_count AS bathroomCount,
            d.is_pet AS isPet,
            d.is_parking_available AS isParkingAvailable,
            hi.image_id AS imageId,
            hi.image_url AS imageUrl
        FROM home h
                 LEFT JOIN home_detail d ON h.home_id = d.home_id
                 LEFT JOIN (
            SELECT home_id, MIN(image_id) AS image_id, MIN(image_url) AS image_url
            FROM home_image
            GROUP BY home_id
        ) hi ON h.home_id = hi.home_id
        WHERE h.user_id = #{userId}
        ORDER BY h.created_at DESC
            LIMIT #{offset}, #{size}
    </select>

    <select id="countMyHomes" parameterType="long" resultType="long">
        SELECT COUNT(*)
        FROM home
        WHERE user_id = #{userId}
    </select>
</mapper>